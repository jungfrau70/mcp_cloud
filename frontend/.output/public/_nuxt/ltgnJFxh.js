const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./xterm.DJ1IDUa8.css"])))=>i.map(i=>d[i]);
import{r as p,g as _,_ as i,z as u,O as m,c as f,o as w,a as c}from"./DrDt6dME.js";var v={};const h={__name:"StepCli.client",setup(g){const r=p(null);let n,e;return _(async()=>{const{Terminal:s}=await i(async()=>{const{Terminal:t}=await import("./BsaJHqEK.js").then(a=>a.x);return{Terminal:t}},[],import.meta.url),{FitAddon:o}=await i(async()=>{const{FitAddon:t}=await import("./BxrNY4OZ.js").then(a=>a.x);return{FitAddon:t}},[],import.meta.url);await i(()=>Promise.resolve({}),__vite__mapDeps([0]),import.meta.url),n=new s({cursorBlink:!0,convertEol:!0,fontFamily:"'Fira Code', monospace",fontSize:14,theme:{background:"#000000",foreground:"#FFFFFF"}});const l=new o;n.loadAddon(l),r.value&&(n.open(r.value),l.fit());const d=(u().public.apiBaseUrl||"/api").replace("http://","ws://").replace("https://","wss://")+"/ws/v1/cli/interactive";e=new WebSocket(d),e.onopen=()=>{n.writeln("Connected to interactive shell...");const t=v.MCP_API_KEY||"my_mcp_eagle_tiger";e.send(JSON.stringify({type:"auth",api_key:t})),e.send(`PS1="mcp-user@cloud-shell:~$ "
`)},e.onmessage=t=>{n.write(t.data)},e.onerror=t=>{console.error("WebSocket Error:",t),n.writeln(`

--- WebSocket Connection Error ---`)},e.onclose=()=>{n.writeln(`

--- Shell session closed ---`)},n.onData(t=>{e.readyState===WebSocket.OPEN&&e.send(t)})}),m(()=>{e&&e.close(),n&&n.dispose()}),(s,o)=>(w(),f("div",null,[o[0]||(o[0]=c("p",{class:"mb-4 text-gray-700"}," 아래는 실제 서버와 연결된 대화형 셸입니다. 명령어를 입력하여 실습을 진행하세요. ",-1)),c("div",{id:"terminal",ref_key:"terminalContainer",ref:r,class:"bg-black text-white font-mono rounded-lg p-4 h-96 overflow-y-auto text-sm"},null,512)]))}};export{h as default};
